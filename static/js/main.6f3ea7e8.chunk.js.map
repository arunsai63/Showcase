{"version":3,"sources":["Components/Core/NavBar.tsx","Components/DS/SingleLinkedList.tsx","Components/DS/DS.tsx","Components/Algo/Algo.tsx","Components/About.tsx","Components/Games/Games.tsx","App.tsx","index.tsx"],"names":["NavBar","className","to","type","id","Component","Node","data","next","this","SingleLinkedList","props","reload","setState","key","Date","now","clear","head","addNode","state","temp","alert","addNodeStart","deleteStart","deleteEnd","temp2","deleteByIndex","index","count","renderNode","style","border","borderLeftWidth","onMouseOver","ele","document","getElementById","display","onMouseLeave","onClick","arr","push","name","placeholder","value","onChange","e","parseInt","currentTarget","overflowY","maxWidth","length","map","DS","Algo","About","Games","App","exact","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6f3ea7e8.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport {\r\n    Link\r\n} from 'react-router-dom'\r\n\r\nclass NavBar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">Veneno</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item ml-5\">\r\n                                <Link className=\"nav-link active\" to=\"/About\">About Me</Link>\r\n                            </li>\r\n                            <li className=\"nav-item ml-5\">\r\n                                <Link className=\"nav-link\" to=\"/DS\">DS</Link>\r\n                            </li>\r\n                            <li className=\"nav-item ml-5\">\r\n                                <Link className=\"nav-link\" to=\"/Algos\">Algorithms</Link>\r\n                            </li>\r\n                            <li className=\"nav-item ml-5\">\r\n                                <Link className=\"nav-link\" to=\"/Games\">Games</Link>\r\n                            </li>\r\n                            {/* <li className=\"nav-item ml-5\">\r\n                                <a className=\"nav-link disabled\" href=\"#\" aria-disabled=\"true\">Disabled</a>\r\n                            </li> */}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar","import React, { Component } from 'react';\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n    head: Node | null,\r\n    data: number | null,\r\n    key: number //to force reload the component\r\n}\r\n\r\nclass Node {\r\n    data: number\r\n    next: Node | null\r\n    constructor(data: number) {\r\n        this.data = data\r\n        this.next = null\r\n    }\r\n}\r\n\r\nclass SingleLinkedList extends Component<IProps, IState> {\r\n\r\n    constructor(props: IProps) {\r\n        super(props)\r\n        this.state = {\r\n            head: null,\r\n            data: 1,\r\n            key: Date.now()\r\n        }\r\n    }\r\n\r\n    reload = () => {\r\n        this.setState({\r\n            key: Date.now()\r\n        })\r\n    }\r\n\r\n    // algorithm methods start\r\n    clear = () => {\r\n        this.setState({\r\n            head: null,\r\n            data: 1\r\n        })\r\n    }\r\n\r\n    addNode = () => {\r\n        if (this.state.data === null) {\r\n            alert('data cant be empty')\r\n            return\r\n        }\r\n\r\n        let temp = this.state.head\r\n        if (temp === null) {\r\n            this.setState({\r\n                head: new Node(this.state.data),\r\n                data: this.state.data + 1\r\n            })\r\n            return\r\n        }\r\n        while (temp.next !== null) {\r\n            temp = temp?.next\r\n        }\r\n        temp.next = new Node(this.state.data)\r\n        this.setState({\r\n            data: this.state.data + 1\r\n        })\r\n    }\r\n\r\n    addNodeStart = () => {\r\n        if (this.state.data === null) {\r\n            alert('data cant be empty')\r\n            return\r\n        }\r\n\r\n        let temp = new Node(this.state.data)\r\n        temp.next = this.state.head\r\n\r\n        this.setState({\r\n            head: temp,\r\n            data: this.state.data + 1\r\n        })\r\n    }\r\n\r\n    deleteStart = () => {\r\n        if (this.state.head === null) {\r\n            return alert(\"list is empty\")\r\n        }\r\n\r\n        if (this.state.head.next === null) {\r\n            this.setState({\r\n                head: null\r\n            })\r\n        } else {\r\n            this.setState({\r\n                head: this.state.head.next\r\n            })\r\n        }\r\n    }\r\n\r\n    deleteEnd = () => {\r\n        if (this.state.head === null) {\r\n            return alert(\"list is empty\")\r\n        }\r\n        let temp = this.state.head\r\n        let temp2: Node | null = null\r\n\r\n        while (temp.next !== null) {\r\n            temp2 = temp\r\n            temp = temp.next\r\n        }\r\n\r\n        if (temp2 !== null) {\r\n            temp2.next = null\r\n            this.reload()\r\n        } else {\r\n            this.setState({\r\n                head: null\r\n            })\r\n        }\r\n    }\r\n\r\n    deleteByIndex = (index: number) => {\r\n        if (this.state.head === null) {\r\n            return alert(\"list is empty\")\r\n        }\r\n        let temp = this.state.head\r\n        let temp2: Node | null = null\r\n        let count = 0\r\n\r\n        if (index === 0) {\r\n            return this.deleteStart()\r\n        }\r\n\r\n        while (temp.next !== null) {\r\n            temp2 = temp\r\n            temp = temp.next\r\n            ++count\r\n            if (count === index) {\r\n                break\r\n            }\r\n        }\r\n\r\n        if (temp2 !== null) {\r\n            temp2.next = temp !== null ? temp.next : null\r\n            this.reload()\r\n        } else {\r\n            this.setState({\r\n                head: null\r\n            })\r\n        }\r\n    }\r\n    // algorithm methods end\r\n\r\n    renderNode = (data: number, index: number) => {\r\n        return (\r\n            <>\r\n                {index !== 0 && <li className=\"list-group-item\" style={{ border: \"none\" }}>\r\n                    {\"->\"}\r\n                </li>}\r\n                <li className=\"list-group-item\" style={{ borderLeftWidth: \"1px\" }}>\r\n                    <div onMouseOver={() => {\r\n                        var ele = document.getElementById(`ll_${index}`)\r\n                        if (ele) {\r\n                            ele.style.display = \"inline-block\"\r\n                        }\r\n                    }} onMouseLeave={() => {\r\n                        var ele = document.getElementById(`ll_${index}`)\r\n                        if (ele) {\r\n                            ele.style.display = \"none\"\r\n                        }\r\n                    }}>\r\n                        {data}\r\n                        <button id={`ll_${index}`} className=\"btn-sm btn-danger\" style={{ display: \"none\" }} onClick={() => this.deleteByIndex(index)}>Delete</button>\r\n                    </div>\r\n                </li>\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let temp = this.state.head\r\n        let arr: number[] = []\r\n        if (temp !== null) {\r\n            while (temp !== null) {\r\n                arr.push(temp.data)\r\n                temp = temp.next\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"jumbotron\">\r\n                    <h2>Linked List</h2>\r\n                </div>\r\n                <div className=\"form-row mt-4\">\r\n                    <div className=\"col-auto my-1\">\r\n                        <input type=\"number\" name=\"data\" id=\"data\" placeholder=\"enter node\" className=\"custom-control-input ml-2\"\r\n                            value={this.state.data ?? \"\"} onChange={\r\n                                (e: React.ChangeEvent<HTMLInputElement>) => {\r\n                                    this.setState({\r\n                                        data: parseInt(e.currentTarget.value ? e.currentTarget.value : '0')\r\n                                    })\r\n                                }} />\r\n                        <button className=\"btn btn-primary mx-4\" onClick={this.addNode}>Add</button>\r\n                        <button className=\"btn btn-primary\" onClick={this.addNodeStart}>Add at Start</button>\r\n                    </div>\r\n                    <div className=\"col-auto my-2\">\r\n                        <button className=\"btn btn-danger mx-2\" onClick={this.deleteStart}>Delete at Start</button>\r\n                        <button className=\"btn btn-danger mx-2\" onClick={this.deleteEnd}>Delete at End</button>\r\n                        <button className=\"btn btn-danger mx-2\" onClick={this.clear}>Delete All</button>\r\n                    </div>\r\n                </div>\r\n                <ul className=\"list-group list-group-horizontal-lg mt-4\" style={{ overflowY: \"auto\", maxWidth: \"80%\" }}>\r\n                    {\r\n                        arr.length\r\n                            ? arr.map(this.renderNode)\r\n                            : <li className=\"list-group-item list-group-item-dark\">no data</li>\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SingleLinkedList","import React, { Component } from 'react';\r\nimport SingleLinkedList from './SingleLinkedList';\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nclass DS extends Component<IProps, IState> {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<SingleLinkedList/>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default DS","import React, { Component } from 'react';\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nclass Algo extends Component<IProps, IState> {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<h1>Alogrithms comings soon...</h1>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Algo","import React, { Component } from 'react';\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nclass About extends Component<IProps, IState> {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<h1>About me</h1>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default About","import React, { Component } from 'react';\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nclass Games extends Component<IProps, IState> {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<h1>Games comings soon...</h1>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Games","import React, { Component } from 'react';\nimport NavBar from './Components/Core/NavBar';\nimport DS from './Components/DS/DS';\nimport {\n\tBrowserRouter as Bro,\n\tSwitch,\n\tRoute\n} from 'react-router-dom'\nimport Algo from './Components/Algo/Algo';\nimport About from './Components/About';\nimport Games from './Components/Games/Games';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Bro>\n\t\t\t\t\t<NavBar />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t<About />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route exact path=\"/About\">\n\t\t\t\t\t\t\t<About />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/DS\">\n\t\t\t\t\t\t\t<DS />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/Algos\">\n\t\t\t\t\t\t\t<Algo />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/Games\">\n\t\t\t\t\t\t\t<Games />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</Bro>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}